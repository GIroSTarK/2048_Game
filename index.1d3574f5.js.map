{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAeI,EAfE,EAAa,SAAS,aAAa,CAAC,WACpC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAc,SAAS,aAAa,CAAC,iBACrC,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAQ,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,CACG,EAAY,CAAA,EAGZ,EAAQ,EAyEZ,SAAS,EAAW,CAAI,CAAE,CAAK,EAC7B,EAAK,WAAW,CAAG,GACnB,EAAK,SAAS,CAAC,KAAK,CAAG,GACvB,EAAK,SAAS,CAAC,GAAG,CAAC,cAEf,EAAQ,IACV,EAAK,WAAW,CAAG,EACnB,EAAK,SAAS,CAAC,GAAG,CAAE,eAAoB,MAAA,CAAN,KAGtB,OAAV,IACF,EAAW,SAAS,CAAC,MAAM,CAAC,UAC5B,EAAQ,CAAA,GAGN,AAgKN,WACE,GAAI,IACF,MAAO,CAAA,EAGT,IAAK,IAAI,EAAI,EAAG,EA/PL,EA+Pe,IACxB,IAAK,IAAI,EAAI,EAAG,EAhQP,EAgQiB,IACxB,GAAI,CAAK,CAAC,EAAE,CAAC,EAAE,GAAK,CAAK,CAAC,EAAE,CAAC,EAAI,EAAE,CACjC,MAAO,CAAA,EAKb,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,IAC5B,IAAK,IAAI,EAAI,EAAG,EAxQP,EAwQiB,IACxB,GAAI,CAAK,CAAC,EAAE,CAAC,EAAE,GAAK,CAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CACjC,MAAO,CAAA,EAKb,MAAO,CAAA,CACT,KArLI,EAAY,SAAS,CAAC,MAAM,CAAC,SAEjC,CAEA,SAAS,EAAe,CAAC,CAAE,CAAM,EAC/B,IAAK,IAAI,EAAI,EAAG,EAhGL,EAgGe,IAAK,CAC7B,CAAK,CAAC,EAAE,CAAC,EAAE,CAAG,CAAM,CAAC,EAAE,CAEvB,IAAM,EAAQ,CAAK,CAAC,EAAE,CAAC,EAAE,CAGzB,EAFa,SAAS,cAAc,CAAE,GAAO,MAAA,CAAL,EAAE,KAAK,MAAA,CAAF,IAE5B,EACnB,CACF,CAEA,SAAS,EAAiB,CAAC,EACzB,IAAK,IAAI,EAAI,EAAG,EA1GC,EA0Ge,IAAK,CACnC,IAAM,EAAQ,CAAK,CAAC,EAAE,CAAC,EAAE,CAGzB,EAFa,SAAS,cAAc,CAAE,GAAO,MAAA,CAAL,EAAE,KAAK,MAAA,CAAF,IAE5B,EACnB,CACF,CAsCA,SAAS,EAAW,CAAG,EAGrB,IAAK,IAFD,EAAa,EAAS,GAEjB,EAAI,EAAG,EAAI,EAAW,MAAM,CAAE,IACjC,CAAU,CAAC,EAAI,EAAE,GAAK,CAAU,CAAC,EAAE,GACrC,CAAU,CAAC,EAAI,EAAE,EAAI,EACrB,CAAU,CAAC,EAAE,CAAG,EAChB,GAAS,CAAU,CAAC,EAAI,EAAE,EAM9B,IAFA,EAAa,EAAS,GAEf,EAAW,MAAM,CAnKP,GAoKf,EAAW,IAAI,CAAC,GAGlB,OAAO,CACT,CAEA,SAAS,EAAS,CAAG,EACnB,OAAO,EAAI,MAAM,CAAC,SAAC,CAAnB,EAA4B,OAAA,EAAO,C,EACrC,CAYA,SAAS,IACP,GAAK,IAML,IAFA,IAAI,EAAQ,CAAA,EAEL,CAAC,GAAO,CACb,IAAM,EAAY,KAAK,KAAK,CAAC,AAjMpB,EAiMoB,KAAK,MAAM,IAClC,EAAa,KAAK,KAAK,CAAC,AAjMf,EAiMe,KAAK,MAAM,IAEzC,GAAI,AAAiC,IAAjC,CAAK,CAAC,EAAU,CAAC,EAAW,CAAQ,CACtC,IAAM,EAnBV,AAAI,AAAa,IAFC,KAAK,MAAM,GAGpB,EAEA,CAkBL,CAAA,CAAK,CAAC,EAAU,CAAC,EAAW,CAAG,EAE/B,IAAM,EAAO,SAAS,cAAc,CAAE,GAAe,MAAA,CAAb,EAAU,KAAc,MAAA,CAAX,GAErD,CAAA,EAAK,WAAW,CAAG,EACnB,EAAK,SAAS,CAAC,GAAG,CAAE,eAAoB,MAAA,CAAN,IAClC,EAAQ,CAAA,CACV,CACF,CACF,CAEA,SAAS,IAEA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,EADF,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EACE,KAAA,E,G,CADP,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,C,G,CACH,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAmB,CAAnB,IAAM,EAAN,EAAA,KAAA,CACH,GAAI,AAAS,IAAT,EACF,MAAO,CAAA,CAEX,C,C,M,E,CAJK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,C,C,C,M,E,CADF,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAQL,MAAO,CAAA,CACT,CAEA,SAAS,IACP,OAAO,EAAM,GAAG,CAAC,SAAC,CAAlB,EAA2B,O,A,S,C,E,G,M,O,C,G,O,E,E,EAAG,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,G,EAChC,CAEA,SAAS,EAAY,CAAS,EAC5B,IAAK,IAAI,EAAI,EAAG,EAnOL,EAmOe,IACxB,IAAK,IAAI,EAAI,EAAG,EAnOD,EAmOiB,IAC9B,GAAI,CAAK,CAAC,EAAE,CAAC,EAAE,GAAK,CAAS,CAAC,EAAE,CAAC,EAAE,CACjC,MAAO,CAAA,EAKb,MAAO,CAAA,CACT,CAvOA,EAAW,gBAAgB,CAAC,QAAS,WAC/B,EAAW,SAAS,CAAC,QAAQ,CAAC,UAChC,EAAW,SAAS,CAAC,MAAM,CAAC,SAC5B,EAAW,SAAS,CAAC,GAAG,CAAC,WACzB,EAAW,WAAW,CAAG,UACzB,EAAa,SAAS,CAAC,GAAG,CAAC,UAC3B,EAAQ,CAAA,EACR,EAAY,CAAA,EACZ,IACA,MAEA,EAAW,SAAS,CAAC,MAAM,CAAC,WAC5B,EAAW,SAAS,CAAC,GAAG,CAAC,SACzB,EAAW,WAAW,CAAG,QACzB,EAAa,SAAS,CAAC,MAAM,CAAC,UAC9B,EAAW,SAAS,CAAC,GAAG,CAAC,UACzB,EAAY,SAAS,CAAC,GAAG,CAAC,UAC1B,AAwNJ,WACE,IAAK,IAAI,EAAI,EAAG,EA/OL,EA+Oe,IAAK,CAC7B,IAAK,IAAI,EAAI,EAAG,EA/OD,EA+OiB,IACV,IAAhB,CAAK,CAAC,EAAE,CAAC,EAAE,EACb,CAAA,CAAK,CAAC,EAAE,CAAC,EAAE,CAAG,CAAA,EAGlB,EAAiB,EACnB,CACA,EAAQ,CACV,IAjOI,EAAU,WAAW,CAAG,IACxB,EAAY,CAAA,EAEhB,GAEA,SAAS,gBAAgB,CAAC,UAAW,SAAC,CAAtC,EACE,GAAI,CAAA,GAAU,GAId,GAAI,AAAU,MAAV,EAAE,GAAG,EAAY,AAAU,YAAV,EAAE,GAAG,CAAgB,CACxC,IAAM,EAAY,IAElB,AA+EJ,CAAA,WACE,IAAK,IAAI,EAAI,EAAG,EAnHC,EAmHe,IAAK,CACnC,IAAI,EAAS,CAAC,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAGjE,EAAe,EADf,EAAS,EAAW,GAEtB,CACF,CAAA,IApFS,EAAY,IACf,GAEJ,CAEA,GAAI,AAAU,MAAV,EAAE,GAAG,EAAY,AAAU,cAAV,EAAE,GAAG,CAAkB,CAC1C,IAAM,EAAY,IAElB,AAyFJ,CAAA,WACE,IAAK,IAAI,EAAI,EAAG,EAxIL,EAwIe,IACxB,CAAK,CAAC,EAAE,CAAG,EAAW,CAAK,CAAC,EAAE,EAC9B,EAAiB,EAErB,CAAA,IA5FS,EAAY,IACf,GAEJ,CAEA,GAAI,AAAU,MAAV,EAAE,GAAG,EAAY,AAAU,eAAV,EAAE,GAAG,CAAmB,CAC3C,IAAM,EAAY,IAElB,AAsFJ,CAAA,WACE,IAAK,IAAI,EAAI,EAAG,EA/IL,EA+Ie,IACxB,CAAK,CAAC,EAAE,CAAC,OAAO,GAChB,CAAK,CAAC,EAAE,CAAG,EAAW,CAAK,CAAC,EAAE,EAC9B,CAAK,CAAC,EAAE,CAAC,OAAO,GAChB,EAAiB,EAErB,CAAA,IA3FS,EAAY,IACf,GAEJ,CAEA,GAAI,AAAU,MAAV,EAAE,GAAG,EAAY,AAAU,cAAV,EAAE,GAAG,CAAkB,CAC1C,IAAM,EAAY,IAElB,AA0DJ,CAAA,WACE,IAAK,IAAI,EAAI,EAAG,EA5HC,EA4He,IAAK,CACnC,IAAI,EAAS,CAAC,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAEjE,EAAO,OAAO,GAEd,AADA,CAAA,EAAS,EAAW,EAApB,EACO,OAAO,GACd,EAAe,EAAG,EACpB,CACF,CAAA,IAjES,EAAY,IACf,GAEJ,CACA,EAAU,WAAW,CAAG,EAC1B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar mainButton = document.querySelector(\".button\");\nvar startMessage = document.querySelector(\".message-start\");\nvar loseMessage = document.querySelector(\".message-lose\");\nvar winMessage = document.querySelector(\".message-win\");\nvar gameScore = document.querySelector(\".game-score\");\nvar field = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nvar startGame = false;\nvar rows = 4;\nvar cellsInRow = 4;\nvar score = 0;\nvar isWon;\nmainButton.addEventListener(\"click\", function() {\n    if (mainButton.classList.contains(\"start\")) {\n        mainButton.classList.remove(\"start\");\n        mainButton.classList.add(\"restart\");\n        mainButton.textContent = \"Restart\";\n        startMessage.classList.add(\"hidden\");\n        isWon = false;\n        startGame = true;\n        generateRandomCell();\n        generateRandomCell();\n    } else {\n        mainButton.classList.remove(\"restart\");\n        mainButton.classList.add(\"start\");\n        mainButton.textContent = \"Start\";\n        startMessage.classList.remove(\"hidden\");\n        winMessage.classList.add(\"hidden\");\n        loseMessage.classList.add(\"hidden\");\n        clearField();\n        gameScore.textContent = \"0\";\n        startGame = false;\n    }\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if (isWon || !startGame) return;\n    if (e.key === \"w\" || e.key === \"ArrowUp\") {\n        var fieldCopy = makeFieldCopy();\n        goUp();\n        if (!fieldsEqual(fieldCopy)) generateRandomCell();\n    }\n    if (e.key === \"a\" || e.key === \"ArrowLeft\") {\n        var fieldCopy1 = makeFieldCopy();\n        goLeft();\n        if (!fieldsEqual(fieldCopy1)) generateRandomCell();\n    }\n    if (e.key === \"d\" || e.key === \"ArrowRight\") {\n        var fieldCopy2 = makeFieldCopy();\n        goRight();\n        if (!fieldsEqual(fieldCopy2)) generateRandomCell();\n    }\n    if (e.key === \"s\" || e.key === \"ArrowDown\") {\n        var fieldCopy3 = makeFieldCopy();\n        goDown();\n        if (!fieldsEqual(fieldCopy3)) generateRandomCell();\n    }\n    gameScore.textContent = score;\n});\nfunction updateCell(cell, value) {\n    cell.textContent = \"\";\n    cell.classList.value = \"\";\n    cell.classList.add(\"field-cell\");\n    if (value > 0) {\n        cell.textContent = value;\n        cell.classList.add(\"field-cell--\".concat(value));\n    }\n    if (value === 2048) {\n        winMessage.classList.remove(\"hidden\");\n        isWon = true;\n    }\n    if (lost()) loseMessage.classList.remove(\"hidden\");\n}\nfunction updateVertical(i, column) {\n    for(var j = 0; j < rows; j++){\n        field[j][i] = column[j];\n        var value = field[j][i];\n        var cell = document.getElementById(\"\".concat(j, \"-\").concat(i));\n        updateCell(cell, value);\n    }\n}\nfunction updateHorizontal(i) {\n    for(var j = 0; j < cellsInRow; j++){\n        var value = field[i][j];\n        var cell = document.getElementById(\"\".concat(i, \"-\").concat(j));\n        updateCell(cell, value);\n    }\n}\nfunction goUp() {\n    for(var i = 0; i < cellsInRow; i++){\n        var column = [\n            field[0][i],\n            field[1][i],\n            field[2][i],\n            field[3][i]\n        ];\n        column = mergeCells(column);\n        updateVertical(i, column);\n    }\n}\nfunction goDown() {\n    for(var i = 0; i < cellsInRow; i++){\n        var column = [\n            field[0][i],\n            field[1][i],\n            field[2][i],\n            field[3][i]\n        ];\n        column.reverse();\n        column = mergeCells(column);\n        column.reverse();\n        updateVertical(i, column);\n    }\n}\nfunction goLeft() {\n    for(var i = 0; i < rows; i++){\n        field[i] = mergeCells(field[i]);\n        updateHorizontal(i);\n    }\n}\nfunction goRight() {\n    for(var i = 0; i < rows; i++){\n        field[i].reverse();\n        field[i] = mergeCells(field[i]);\n        field[i].reverse();\n        updateHorizontal(i);\n    }\n}\nfunction mergeCells(row) {\n    var clearedRow = clearRow(row);\n    for(var i = 1; i < clearedRow.length; i++)if (clearedRow[i - 1] === clearedRow[i]) {\n        clearedRow[i - 1] *= 2;\n        clearedRow[i] = 0;\n        score += clearedRow[i - 1];\n    }\n    clearedRow = clearRow(clearedRow);\n    while(clearedRow.length < cellsInRow)clearedRow.push(0);\n    return clearedRow;\n}\nfunction clearRow(row) {\n    return row.filter(function(cell) {\n        return cell > 0;\n    });\n}\nfunction generate2or4() {\n    var randValue = Math.random();\n    if (randValue <= 0.1) return 4;\n    else return 2;\n}\nfunction generateRandomCell() {\n    if (!hasEmptyCells()) return;\n    var found = false;\n    while(!found){\n        var randomRow = Math.floor(Math.random() * rows);\n        var randomCell = Math.floor(Math.random() * cellsInRow);\n        if (field[randomRow][randomCell] === 0) {\n            var value = generate2or4();\n            field[randomRow][randomCell] = value;\n            var cell = document.getElementById(\"\".concat(randomRow, \"-\").concat(randomCell));\n            cell.textContent = value;\n            cell.classList.add(\"field-cell--\".concat(value));\n            found = true;\n        }\n    }\n}\nfunction hasEmptyCells() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined, _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n    try {\n        for(var _iterator = field[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true){\n            var row = _step.value;\n            try {\n                for(var _iterator1 = row[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true){\n                    var cell = _step1.value;\n                    if (cell === 0) return true;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator1.return != null) {\n                        _iterator1.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    } catch (err) {\n        _didIteratorError1 = true;\n        _iteratorError1 = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion1 && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError1) {\n                throw _iteratorError1;\n            }\n        }\n    }\n    return false;\n}\nfunction makeFieldCopy() {\n    return field.map(function(row) {\n        return _to_consumable_array(row);\n    });\n}\nfunction fieldsEqual(fieldCopy) {\n    for(var i = 0; i < rows; i++)for(var j = 0; j < cellsInRow; j++){\n        if (field[i][j] !== fieldCopy[i][j]) return false;\n    }\n    return true;\n}\nfunction clearField() {\n    for(var i = 0; i < rows; i++){\n        for(var j = 0; j < cellsInRow; j++)if (field[i][j] !== 0) field[i][j] = 0;\n        updateHorizontal(i);\n    }\n    score = 0;\n}\nfunction lost() {\n    if (hasEmptyCells()) return false;\n    for(var i = 0; i < rows; i++)for(var j = 0; j < rows; j++){\n        if (field[i][j] === field[i][j + 1]) return false;\n    }\n    for(var i1 = 0; i1 < rows - 1; i1++)for(var j1 = 0; j1 < rows; j1++){\n        if (field[i1][j1] === field[i1 + 1][j1]) return false;\n    }\n    return true;\n}\n\n//# sourceMappingURL=index.1d3574f5.js.map\n","'use strict';\n\nconst mainButton = document.querySelector('.button');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst gameScore = document.querySelector('.game-score');\nconst field = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\nlet startGame = false;\nconst rows = 4;\nconst cellsInRow = 4;\nlet score = 0;\nlet isWon;\n\nmainButton.addEventListener('click', () => {\n  if (mainButton.classList.contains('start')) {\n    mainButton.classList.remove('start');\n    mainButton.classList.add('restart');\n    mainButton.textContent = 'Restart';\n    startMessage.classList.add('hidden');\n    isWon = false;\n    startGame = true;\n    generateRandomCell();\n    generateRandomCell();\n  } else {\n    mainButton.classList.remove('restart');\n    mainButton.classList.add('start');\n    mainButton.textContent = 'Start';\n    startMessage.classList.remove('hidden');\n    winMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n    clearField();\n    gameScore.textContent = '0';\n    startGame = false;\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (isWon || !startGame) {\n    return;\n  }\n\n  if (e.key === 'w' || e.key === 'ArrowUp') {\n    const fieldCopy = makeFieldCopy();\n\n    goUp();\n\n    if (!fieldsEqual(fieldCopy)) {\n      generateRandomCell();\n    }\n  }\n\n  if (e.key === 'a' || e.key === 'ArrowLeft') {\n    const fieldCopy = makeFieldCopy();\n\n    goLeft();\n\n    if (!fieldsEqual(fieldCopy)) {\n      generateRandomCell();\n    }\n  }\n\n  if (e.key === 'd' || e.key === 'ArrowRight') {\n    const fieldCopy = makeFieldCopy();\n\n    goRight();\n\n    if (!fieldsEqual(fieldCopy)) {\n      generateRandomCell();\n    }\n  }\n\n  if (e.key === 's' || e.key === 'ArrowDown') {\n    const fieldCopy = makeFieldCopy();\n\n    goDown();\n\n    if (!fieldsEqual(fieldCopy)) {\n      generateRandomCell();\n    }\n  }\n  gameScore.textContent = score;\n});\n\nfunction updateCell(cell, value) {\n  cell.textContent = '';\n  cell.classList.value = '';\n  cell.classList.add('field-cell');\n\n  if (value > 0) {\n    cell.textContent = value;\n    cell.classList.add(`field-cell--${value}`);\n  }\n\n  if (value === 2048) {\n    winMessage.classList.remove('hidden');\n    isWon = true;\n  }\n\n  if (lost()) {\n    loseMessage.classList.remove('hidden');\n  }\n}\n\nfunction updateVertical(i, column) {\n  for (let j = 0; j < rows; j++) {\n    field[j][i] = column[j];\n\n    const value = field[j][i];\n    const cell = document.getElementById(`${j}-${i}`);\n\n    updateCell(cell, value);\n  }\n}\n\nfunction updateHorizontal(i) {\n  for (let j = 0; j < cellsInRow; j++) {\n    const value = field[i][j];\n    const cell = document.getElementById(`${i}-${j}`);\n\n    updateCell(cell, value);\n  }\n}\n\nfunction goUp() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let column = [field[0][i], field[1][i], field[2][i], field[3][i]];\n\n    column = mergeCells(column);\n    updateVertical(i, column);\n  }\n}\n\nfunction goDown() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let column = [field[0][i], field[1][i], field[2][i], field[3][i]];\n\n    column.reverse();\n    column = mergeCells(column);\n    column.reverse();\n    updateVertical(i, column);\n  }\n}\n\nfunction goLeft() {\n  for (let i = 0; i < rows; i++) {\n    field[i] = mergeCells(field[i]);\n    updateHorizontal(i);\n  }\n}\n\nfunction goRight() {\n  for (let i = 0; i < rows; i++) {\n    field[i].reverse();\n    field[i] = mergeCells(field[i]);\n    field[i].reverse();\n    updateHorizontal(i);\n  }\n}\n\nfunction mergeCells(row) {\n  let clearedRow = clearRow(row);\n\n  for (let i = 1; i < clearedRow.length; i++) {\n    if (clearedRow[i - 1] === clearedRow[i]) {\n      clearedRow[i - 1] *= 2;\n      clearedRow[i] = 0;\n      score += clearedRow[i - 1];\n    }\n  }\n\n  clearedRow = clearRow(clearedRow);\n\n  while (clearedRow.length < cellsInRow) {\n    clearedRow.push(0);\n  }\n\n  return clearedRow;\n}\n\nfunction clearRow(row) {\n  return row.filter((cell) => cell > 0);\n}\n\nfunction generate2or4() {\n  const randValue = Math.random();\n\n  if (randValue <= 0.1) {\n    return 4;\n  } else {\n    return 2;\n  }\n}\n\nfunction generateRandomCell() {\n  if (!hasEmptyCells()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const randomRow = Math.floor(Math.random() * rows);\n    const randomCell = Math.floor(Math.random() * cellsInRow);\n\n    if (field[randomRow][randomCell] === 0) {\n      const value = generate2or4();\n\n      field[randomRow][randomCell] = value;\n\n      const cell = document.getElementById(`${randomRow}-${randomCell}`);\n\n      cell.textContent = value;\n      cell.classList.add(`field-cell--${value}`);\n      found = true;\n    }\n  }\n}\n\nfunction hasEmptyCells() {\n  for (const row of field) {\n    for (const cell of row) {\n      if (cell === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction makeFieldCopy() {\n  return field.map((row) => [...row]);\n}\n\nfunction fieldsEqual(fieldCopy) {\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cellsInRow; j++) {\n      if (field[i][j] !== fieldCopy[i][j]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction clearField() {\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cellsInRow; j++) {\n      if (field[i][j] !== 0) {\n        field[i][j] = 0;\n      }\n    }\n    updateHorizontal(i);\n  }\n  score = 0;\n}\n\nfunction lost() {\n  if (hasEmptyCells()) {\n    return false;\n  }\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < rows; j++) {\n      if (field[i][j] === field[i][j + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let i = 0; i < rows - 1; i++) {\n    for (let j = 0; j < rows; j++) {\n      if (field[i][j] === field[i + 1][j]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","isWon","mainButton","document","querySelector","startMessage","loseMessage","winMessage","gameScore","field","startGame","score","updateCell","cell","value","textContent","classList","add","concat","remove","lost","hasEmptyCells","j","i1","rows","j1","updateVertical","column","getElementById","updateHorizontal","mergeCells","row","clearedRow","clearRow","push","filter","generateRandomCell","found","randomRow","Math","floor","random","randomCell","randValue","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step","_iterator","Symbol","iterator","next","done","_step1","_iterator1","err","return","makeFieldCopy","map","_array_without_holes","isArray","_iterable_to_array","iter","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","fieldsEqual","fieldCopy","addEventListener","contains","clearField","e","key","goUp","fieldCopy1","goLeft","fieldCopy2","goRight","reverse","fieldCopy3","goDown"],"version":3,"file":"index.1d3574f5.js.map"}